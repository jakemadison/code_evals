__author__ = 'jmadison'


import fileinput


def parse_line(line):

    len_line = len(line)

    if len_line % 2 != 0:
        return False

    first_half = line[0:len_line/2]
    second_half = line[len_line/2:]

    for each, reverse in zip(first_half, second_half[::-1]):
        print each, reverse
        if each != reverse:
            return False

    else:
        return True


def main():

    for line in fileinput. input(files='./testfile'):
    # for line in fileinput.input():
        line = line.strip()
        if not line:
            continue

    line = '()[]{}'  # true
    line = '([)]{}'  # false
    line = '([]()){}'  # true
    line = '(([])){}'  # true

    # a_o - 2, b_o - 1,: if a_c before b_c, raise error
    # generalize:  if a close of any earlier type happens before the close of that earlier character: fail

    # once A has started , then once B has started, we can't accept a closing A before a closing B

    # start with open.  for that piece, any other open is okay. if it is a close it must be of same type.
    # A: 1, B: 1, C: 0 --

    parens_dict = {'A': 0, 'B': 0, 'C': 0}
    open_chars = '({['
    close_chars = ')}]'

    for each_char in line:
        if each_char in open_chars:
            parens_dict['A'] += 1






    print parse_line(line)


if __name__ == '__main__':
    main()












